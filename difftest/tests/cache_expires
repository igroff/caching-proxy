#! /usr/bin/env bash
# vi: ft=sh
# make sure we're clear
curl -s http://localhost:8080/____/delete/now-fast
echo ""
# ok, so here's the deal
# first request will cause the response to be cached, as there will be no cached response available
FIRST_REQUEST=$(curl -s http://localhost:8080/now-fast)
# then we wait until our cach is expired and hit it again, and since the expiration time has 
# elapsed (it is 2 seconds) and we're set to serve stale cache, we should get the cached response
# but trigger a background rebuild
sleep 2.5
SECOND_REQUEST=$(curl -s http://localhost:8080/now-fast)
# now we wait again to make sure our rebuild is complete and with this final request we should
# get a new value
sleep 2
THIRD_REQUEST=$(curl -s http://localhost:8080/now-fast)

if [ $FIRST_REQUEST -eq $SECOND_REQUEST ]; then
  echo "good cached requests"
else
  echo "we didn't get a cached request at all"
  echo $FIRST_REQUEST
  echo $SECOND_REQUEST
  echo $THIRD_REQUEST
  exit 1
fi

if [ $THIRD_REQUEST -gt $FIRST_REQUEST ]; then
  echo "our third request did result in a new response"
  echo "all is good"
else
  echo "something went wrong with our third response"
  echo $FIRST_REQUEST
  echo $SECOND_REQUEST
  echo $THIRD_REQUEST
  exit 1
fi

